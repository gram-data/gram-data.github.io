{"version":3,"sources":["webpack:///./src/components/repository.tsx","webpack:///./src/components/avatar.tsx","webpack:///./src/pages/index.tsx"],"names":["RepositoryHeader","repo","style","display","justifyContent","fontSize","marginBottom","href","resourcePath","target","rel","name","aria-label","FooterItem","children","marginRight","RepositoryFooter","language","languages","edges","length","node","timeAgo","Date","updatedA","getMilliseconds","updatedAt","Math","floor","slice","color","borderRadius","height","position","top","width","backgroundColor","stargazers","totalCount","licenseInfo","homepageUrl","RepositoryDescription","description","Repository","borderBottom","padding","Avatar","img","overflow","alignItems","flexShrink","userSelect","src","alt","textAlign","objectFit","margin","IndexPage","data","githubData","repositoryOwner","avatarUrl","repositories","maxWidth","nodes","map","key","reverse"],"mappings":"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","file":"component---src-pages-index-tsx-d4efc2767bcd01567064.js","sourcesContent":["import React from \"react\"\nimport { LawIcon, StarIcon } from \"@primer/octicons-react\"\n\n\nconst RepositoryHeader = ({ repo }) => {\n  return (\n    <div\n      style={{ display: `flex`, justifyContent: `space-between`, fontSize: 14 }}\n    >\n      <h3\n        style={{\n          display: `flex`,\n          justifyContent: `space-between`,\n          marginBottom: 0,\n          fontSize: 20,\n        }}\n      >\n        <a\n          href={`https://github.com${repo.resourcePath}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {repo.name}\n        </a>\n      </h3>\n      <a\n        href={`https://github.com${repo.resourcePath}`}\n        aria-label=\"Star repo on GitHub\"\n      >\n        Star\n      </a>\n    </div>\n  )\n}\n\nconst FooterItem:React.FC = ({ children }) => (\n  <span style={{ marginRight: 16 }}>{children}</span>\n)\n\nconst RepositoryFooter = ({ repo }) => {\n  const language = (repo.languages.edges.length > 0) ? repo.languages.edges[0].node : ''\n  const timeAgo = new Date(repo.updatedA).getMilliseconds() - new Date().getMilliseconds()\n  const daysAgo = Math.floor(timeAgo / (1000 * 60 * 60 * 24)) // ms to days\n  let updatedAt = repo.updatedAt.slice(0, 10)\n\n  // if (daysAgo > -21) {\n  //   updatedAt = new Intl.RelativeTimeFormat(\"en\", { style: \"narrow\" }).format(\n  //     daysAgo,\n  //     \"day\"\n  //   )\n  // }\n  return (\n    <div style={{ color: `#586069`, fontSize: 12 }}>\n      <FooterItem>\n        <span\n          style={{\n            borderRadius: `50%`,\n            display: `inline-block`,\n            height: 12,\n            position: `relative`,\n            top: 1,\n            width: 12,\n            backgroundColor: language.color,\n          }}\n        />{\" \"}\n        {language.name}\n      </FooterItem>\n      <FooterItem>\n        <StarIcon />\n        {repo.stargazers.totalCount}{\" \"}\n      </FooterItem>\n      {repo.licenseInfo && (\n        <FooterItem>\n          <LawIcon /> {repo.licenseInfo.name}\n        </FooterItem>\n      )}\n      <FooterItem>Updated: {updatedAt}</FooterItem>\n      {repo.homepageUrl && <FooterItem />}{\" \"}\n    </div>\n  )\n}\n\nconst RepositoryDescription = ({ repo }) => (\n  <div style={{ width: `75%` }}>\n    <p style={{ color: `#586069`, marginBottom: 0 }}>\n      {repo.description}\n\n      {repo.homepageUrl && (\n        <>\n          {\" -\"} <a href={repo.homepageUrl}>{repo.homepageUrl}</a>\n        </>\n      )}\n    </p>\n  </div>\n)\n\nconst Repository = ({ repo }) => {\n  return (\n    <div\n      style={{\n        borderBottom: `1px solid #e1e4e8`,\n        marginBottom: `1rem`,\n        padding: `1rem`,\n        fontSize: 16,\n      }}\n    >\n      <RepositoryHeader repo={repo} />\n      <RepositoryDescription repo={repo} />\n      <RepositoryFooter repo={repo} />\n    </div>\n  )\n}\n\nexport default Repository\n","import React from \"react\"\n\nconst Avatar = ({ img }) => {\n  return (\n    <div\n      style={{\n        width: 125,\n        height: 125,\n        display: \"flex\",\n        position: \"relative\",\n        overflow: \"hidden\",\n        fontSize: \"1.25rem\",\n        alignItems: \"center\",\n        flexShrink: 0,\n        userSelect: \"none\",\n        borderRadius: \"50%\",\n        justifyContent: \"center\",\n      }}\n    >\n      <img\n        src={img}\n        alt=\"avatar\"\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          textAlign: \"center\",\n          objectFit: \"cover\",\n          margin: 0,\n        }}\n      />\n    </div>\n  )\n}\n\nexport default Avatar\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Repository from \"../components/repository\"\nimport Layout from \"../components/layout\"\nimport Avatar from \"../components/avatar\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = ({ data }) => {\n  const {\n    name,\n    avatarUrl,\n    repositories,\n  } = data.githubData.data.repositoryOwner\n\n  return (\n    <Layout>\n      <SEO />\n      <div style={{ maxWidth: `960px`, marginBottom: `1.45rem` }}>\n        <div\n          style={{\n            display: `flex`,\n            alignItems: `center`,\n            margin: `1.45rem 0`,\n          }}\n        >\n          <Avatar img={avatarUrl} />\n        </div>\n        {repositories.nodes\n          .map(repo => <Repository key={repo.name} repo={repo} />)\n          .reverse()}\n      </div>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const gitHubQuery = graphql`\n  {\n    githubData {\n      data {\n        repositoryOwner {\n          avatarUrl,\n          repositories {\n            nodes {\n              name\n              description\n              homepageUrl\n              resourcePath\n              forkCount\n              createdAt\n              updatedAt\n              languages {\n                edges {\n                  node {\n                    name\n                    color\n                  }\n                }\n              }\n              licenseInfo {\n                name\n              }\n              stargazers {\n                totalCount\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}